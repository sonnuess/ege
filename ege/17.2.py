# В файле содержится последовательность из 10000 натуральных чисел.
# Каждое число не превышает 10000.
# Определите и запишите в ответе сначала количество пар элементов последовательности,
# у которых различные остатки от деления на d=160 и хотя бы одно из
# чисел делится на  p=7, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.
# Порядок элементов в паре не важен.

f = open('text.txt').read().split('\n')
sm = 0
k = 0
lst = []
f = list(map(int, f))
d = 160
p = 7

for i in range(0, len(f)):
    for j in range(i+1, len(f)):
        a = f[i]
        b = f[j]
        if ((a%d) != (b%d)) and (a%p == 0 or b%p == 0):
            k += 1
            if a+b > sm:
                sm = a+b
print(k)
print(sm)





f = open('text.txt').read().split('\n')
n = 20
sm = 0
k = 0
lst = []
f = list(map(int, f))
d = 160
p = 31

for i in range(0, len(f)):
    for j in range(i+1, len(f)):
        a = f[i]
        b = f[j]
        if ((a-b)%2 == 0) and (a%p == 0 or b%p == 0):
            k += 1
            if a+b > sm:
                sm = a+b
print(k)
print(sm)

# Необходимо определить количество пар положительных элементов этой последовательности,
# сумма которых нечетна, при этом между элементами пары есть хотя бы один ноль.

f = open('text.txt').read().split('\n')
n = 20
sm = 0
k = 0
lst = []

f = list(map(int, f))
for i in range(0, len(f)):
    if f[i] == 0:
        lst.append(i)

for i in range(0, len(f)):
    for j in range(i + 1, len(f)):
        a = f[i]
        b = f[j]
        m = 0
        for x in lst:
            if x > i and x < j:
                m += 1
        if ((a + b) % 2 != 0) and m > 0 and a != 0 and b != 0:
            k += 1

print(k)



# Найдите количество пар элементов последовательности,
# произведение которых кратно 48 и равно произведению элементов какой-либо другой пары
# (в которой отличается индекс хотя бы одного из элементов, образующих пару).

f = open('text.txt').read().split('\n')
n = 20
sm = 0
k = 0
lst = []
f = list(map(int, f))
n = 100
for i in range(0, len(f)):
    for j in range(i+1, len(f)):
        a = f[i]
        b = f[j]
        if a*b % 48 == 0:
           lst.append(a*b)

for i in range(0, len(f)):
    for j in range(i+1, len(f)):
        a = f[i]
        b = f[j]
        if lst.count(a*b) > 1:
            k += 1

print(k)



# Определите количество пар последовательности, в которых только одно число оканчивается на 3  ,
# а сумма квадратов элементов пары не меньше квадрата максимального элемента последовательности, оканчивающегося на 3
# . В ответе запишите два числа: сначала количество найденных пар, затем максимальную из сумм квадратов элементов таких пар.
# В данной задаче под парой подразумевается два различных элемента последовательности.

f = open('text.txt').read().split('\n')
m = 0
sm = 0
k = 0
f = list(map(int, f))
for el in f:
    if el%10 == 3:
        if el > m:
            m = el
#9973
for i in range(0, len(f)):
    for j in range(i+1, len(f)):
        a = f[i]
        b = f[j]
        if ((a**2 + b**2) >= 9973**2) and (((a % 10 == 3) and (b % 10 != 3)) or ((a % 10 != 3) and (b % 10 == 3))):
                k += 1
                if a**2 + b**2 > sm:
                    sm = a**2 + b**2


print(k)
print(sm) #454740 199440730