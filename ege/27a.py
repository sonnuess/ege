# Последовательность натуральных чисел характеризуется числом Х— наибольшим числом,
# кратным 14 и являющимся произведением двух элементов последовательности с различными номерами.
# Гарантируется, что хотя бы одно такое произведение в последовательности есть.
f = open('text.txt').read().split('\n')
f = list(map(int, f))
ma = 0
for i in range(0, len(f)):
    for j in range(i+1, len(f)):
        a = f[i]
        b = f[j]
        if (a*b)%14 == 0:
            if ma < a*b:
                ma = a*b

print(ma)

'''Определите количество пар в последовательности, где сумма элементов кратна 3. Найдите количество. В задаче под парой подразумевается пара различных чиесл последовательности.'''
f = open('file.txt').read().split('\n')
f = list(map(int, f))
k_0 = 0
k_1 = 0
k_2 = 0
ans = 0
for el in f:
    if el % 3 == 0:
        ans += k_0
        k_0 += 1

    if el % 3 == 1:
        ans += k_2
        k_1 += 1

    if el % 3 == 2:
        ans += k_1
        k_2 += 1
print(ans)


c = 0
for i in range(len(f)):
    for j in range(i+1, len(f)):
        if (f[i]+f[j]) % 3 == 0:
            c += 1
print(c)



# Определите количество пар в последовательности, произведение которых кратно 2. Найдите количество. В задаче под парой подразумевается пара различных чисел последовательности.
f = open('file.txt').read().split('\n')
f = list(map(int, f))
k_ch = 0
k_n = 0
ans = 0
# четное + четное или четное + нечетное
for el in f:
    if el % 2 == 0:
        ans += k_ch + k_n
        k_ch += 1
    else:
        ans += k_ch
        k_n += 1
print(ans)


# Определите количество пар в последовательности, произведение которых кратно 4. Найдите количество. В задаче под парой подразумевается пара различных чисел последовательности.
f = open('file.txt').read().split('\n')
f = list(map(int, f))
k_1 = 0
k_0 = 0
k_2 = 0
ans = 0
for el in f:
    if (el%4) == 0:
        ans += k_1 + k_2 + k_0
        k_2 += 1
    elif el % 2 == 0:
        ans += k_1 + k_2
        k_1 += 1
    else:
        ans += k_2
        k_0 += 1
print(ans)

c = 0
for i in range(len(f)):
    for j in range(i+1, len(f)):
        if (f[i] * f[j]) % 4 == 0:
            c += 1
print(c)

# Определите количество пар в последовательности, разность которых кратнф 3. Найдите количество. В задаче под парой подразумевается пара различных чисел последовательности.
f = open('file.txt').read().split('\n')
f = list(map(int, f))

f = open('file.txt').read().split('\n')
f = list(map(int, f))
k_0 = 0
k_1 = 0
k_2 = 0
ans = 0
for el in f:
    if el % 3 == 0:
        ans += k_0
        k_0 += 1

    if el % 3 == 1:
        ans += k_1
        k_1 += 1

    if el % 3 == 2:
        ans += k_2
        k_2 += 1
print(ans)


c = 0
for i in range(len(f)):
    for j in range(i+1, len(f)):
        if (abs(f[i]-f[j])) % 3 == 0:
            c += 1
print(c)


'''Определите количество пар в последовательности, где сумма элементов кратна 2. Найдите количество. В задаче под парой подразумевается пара различных чиесл последовательности.'''
f = open('file.txt').read().split('\n')
f = list(map(int, f))
k_0 = 0
k_1 = 0
ans = 0
for el in f:
    if el % 2 == 0:
        ans += k_0
        k_0 += 1

    if el % 2 == 1:
        ans += k_1
        k_1 += 1

print(ans)

'''Необходимо определить количество пар, для которых сумма кратна 6. В ответ дайте одно число - количество.'''
f = open('file.txt').read().split('\n')
f = list(map(int, f))
k_0 = 0
k_1 = 0
k_2 = 0
k_3 = 0
k_4 = 0
k_5 = 0
ans = 0
for el in f:
    if el % 6 == 0:
        ans += k_0
        k_0 += 1

    if el % 6 == 1:
        ans += k_5
        k_1 += 1

    if el % 6 == 2:
        ans += k_4
        k_2 += 1

    if el % 6 == 3:
        ans += k_3
        k_3 += 1

    if el % 6 == 4:
        ans += k_2
        k_4 += 1

    if el % 6 == 5:
        ans += k_1
        k_5 += 1

print(ans)

'''Необходимо определить количество пар, для которых сумма кратна 6. В ответ дайте одно число - количество.'''
f = open('file.txt').read().split('\n')
f = list(map(int, f))
k_0 = 0
k_2 = 0
k_3 = 0
k_no = 0
ans = 0
for el in f:
    if el % 6 == 0:
        ans += k_0 + k_2 + k_3 + k_no
        k_0 += 1

    elif el % 2 == 0:
        ans += k_3 + k_0
        k_2 += 1

    elif el % 3 == 0:
        ans += k_2 + k_0
        k_3 += 1
    else:
        ans += k_0
        k_no += 1

print(ans)


'''Необходимо определить количество пар, для которых сумма кратна 6. В ответ дайте одно число - количество.'''
f = open('file.txt').read().split('\n')
f = list(map(int, f))
k_0 = 0
k_2 = 0
k_3 = 0
k_no = 0
ans = 0
for el in f:
    if el % 15 == 0:
        ans += k_0 + k_2 + k_3 + k_no
        k_0 += 1

    elif el % 5 == 0:
        ans += k_3 + k_0
        k_2 += 1

    elif el % 3 == 0:
        ans += k_2 + k_0
        k_3 += 1
    else:
        ans += k_0
        k_no += 1

print(ans)

'''Необходимо определить количество пар, для которых сумма кратна 6. В ответ дайте одно число - количество.'''
f = open('file.txt').read().split('\n')
f = list(map(int, f))
ans = 0
k_0 = 0
k_4 = 0
k_3 = 0
k_2 = 0
k_1 = 0
for el in f:
    if el % 5 == 0:
        ans += k_0
        k_0 += 1

    if el % 5 == 4:
        ans += k_4
        k_4 += 1

    if el % 5 == 3:
        ans += k_3
        k_3 += 1

    if el % 5 == 2:
        ans += k_2
        k_2 += 1

    if el % 5 == 1:
        ans += k_1
        k_1 += 1

print(ans)


'''Определите количество пар в последовательности, сумма которых кратна 15 Найдите количество. В задаче под парой подразумевается пара различных чисел последовательности.'''
f = open('file.txt').read().split('\n')
f = list(map(int, f))
ans = 0
m = [0] * 15
for el in f:
    if el % 15 != 0:
        a = el % 15
        ans += m[15 - a]
        m[a] += 1
    else:
        ans += m[0]
        m[0] += 1
print(ans)

'''Определите количество пар в последовательности, разность которых кратна 18. Найдите количество. В задаче под парой подразумевается пара различных чисел последовательности.'''
f = open('file.txt').read().split('\n')
f = list(map(int, f))
ans = 0
lib = {'0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0,}
for el in f:
    a = str(el % 18)
    ans += lib[a]
    lib[a] += 1
print(ans)


'''Определите количество пар в последовательности, произведение которых кратно 24. Найдите количество. В задаче под парой подразумевается пара различных чисел последовательности..'''
from math import gcd
f = open('file.txt').read().split('\n')
f = list(map(int, f))
ans = 0
m = [0] * 25
for el in f:
    a = gcd(el, 24)
    for i in range(len(m)):
        if a*i % 24 == 0:
            ans += m[i]
    m[a] += 1



print(ans)
# 24 = 2 * 2 * 2 * 3


'''Дано число N,   затем N   натуральных чисел. Рассматриваются все пары элементов последовательности, разность которых четна, и в этих парах, по крайней мере, одно из чисел делится на 17  .
Среди всех таких пар найдите пару с максимальной суммой элементов и выведите элементы пары в порядке возрастания их числовых значений.
Входные данные
В первой строке подается натуральное число 1 < N < 100000  . В каждой строке после записано одно натуральное число, не превышающее 10000  .'''
f = open('file.txt').read().split('\n')
f = list(map(int, f))

ans = 0
m_kr_17 = [0] * 2
m_nkr_17 = [0] * 2
k = 0
for el in f:
    ost = el % 2
    par_ost = (2 - el) % 2
    if el % 17 == 0:
        ans += m_kr_17[par_ost] + m_nkr_17[par_ost]
        m_kr_17[ost] += 1
    else:
        ans += m_kr_17[par_ost]
        m_nkr_17[ost] += 1

print(ans)
''''''
f = open('file.txt').read().split('\n')
f = list(map(int, f))

ans = 0
m_kr_17 = [0] * 2
m_nkr_17 = [0] * 2
m = [m_nkr_17, m_kr_17]
for el in f:
    ost = el % 2
    par_ost = (2 - el) % 2

    ans += m[1][par_ost] + (m[0][par_ost] * (el % 17 == 0))

    m[el % 17 == 0][ost] += 1

print(ans)


f = open('file.txt').read().split('\n')
f = list(map(int, f))
print(f)
k_0 = 0
k_1 = 0
k_2 = 0
k_3 = 0
ans = 0
for el in f:
    if el % 4 == 0:
        ans += k_0
        k_0 += 1
    if el % 4 == 1:
        ans += k_1
        k_1 += 1
    if el % 4 == 2:
        ans += k_2
        k_2 += 1
    if el % 4 == 3:
        ans += k_3
        k_3 += 1
print(ans)
''''''''''''''''''
f = open('file.txt').read().split('\n')
f = list(map(int, f))
print(f)
k = [0] * 43
ans = 0
for el in f:
    ost = el % 43
    print(ost)
    ans += k[(43-ost) % 43]
    k[ost] += 1
print(ans)

''''''''''''''''''''''''''''''''''''''''''
f = open('file.txt').read().split('\n')
f = list(map(int, f))
from math import gcd
print(f)
ans = 0
m = [0] * 25
for el in f:
    a = gcd(el, 24)
    for i in range(len(m)):
        if a*i % 24 == 0:
            ans += m[i]

    m[a] += 1
print(ans)

f = open('file.txt').read().split('\n')
f = list(map(int, f))

ans = 0
m_kr_17 = [0] * 2
m_nkr_17 = [0] * 2
m = [m_nkr_17, m_kr_17]
for el in f:
    ost = el % 2
    par_ost = (2 - el) % 2

    ans += m[1][par_ost] + (m[0][par_ost] * (el % 17 == 0))

    m[el % 17 == 0][ost] += 1

print(ans)



'''Имеется набор данных из N целых чисел. Рассматриваются все пары различных элементов последовательности.
Необходимо определить количество пар элементов, сумма которых делится на 91 и при этом хотя бы один элемент из пары строго больше 33.
В первой строке входных данных задаётся количество чисел N. В каждой из последующих N строк записано одно целое положительное число, не превышающее 10 000.
Пример входных данных:
5
90
1
7
92
33
Выходные данные для приведённого выше примера: 2
В ответе укажите два числа: сначала значение искомого количества для файла А, затем для файла B.'''

f = open('file.txt').read().split('\n')
f = list(map(int, f))
ans = 0
b_33 = [0] * 91
m_33 = [0] * 91
# сумма кратна 91 и хб 1 > 33
for el in f:
    ost = el % 91
    par_ost = (91 - ost) % 91

    if el > 33:
        ans += m_33[par_ost] + b_33[par_ost]
        b_33[ost] += 1
    else:
        ans += b_33[par_ost]
        m_33[ost] += 1

print(ans)
c = 0
for i in range(len(f)):
    for j in range(i+1, len(f)):
        a, b = f[i], f[j]
        if ((a + b) % 91 == 0) and ((a>33) or (b>33)):
            c += 1


print(c)

'''Найти максимальную сумму пары чисел в файле, где числа пары находятся на расстоянии >3 (= значит i-j>=3)'''
f = open('file.txt').read().split('\n')
f = list(map(int, f))
ans = 0

mx = 0
for i in range(len(f)):
    el = f[i]
    mx = max(mx, f[i - 3])
    ans = max(ans, el + mx)

print(ans)

for i in range(len(f)):
    for j in range(i+3, len(f)):
        a, b = f[i], f[j]
        if (a + b) % 2 == 0:
            ans = max(a+b, ans)
print(ans)


'''Метеорологическая станция ежеминутно снимали показания прибора в течение N минут (N – целое число),
которое измеряет количество осадков в условных единицах за минуту, предшествующую снятию показаний.
Необходимо найти максимальную сумму двух показаний, между которыми прошло не менее K минут.
Входные данные
Даны два входных файла (файл A и файл B), каждый из которых
в первой строке содержит число K – минимальное время, которое должно пройти между двумя снятиями показаний.
Во второй строке число N (1 ≤ N ≤ 10 000 000, N > K) – количество измерений показателя.
 В каждой из следующих N строк находятся одно число: количество осадков (все числа неотрицательные, не превышающие 10 000 000).
 Числа указаны в порядке снятия показаний прибора, начиная с первой минуты.
В ответе укажите два числа: сначала значение искомой величины для файла А, затем – для файла B.
Типовой пример организации данных во входном файле
3
5
15
2
0
10
30
При таких исходных данных, когда минимальное время между двумя снятиями показаний составляет 3 минуты, максимальная сумма показаний равна 45.'''
f = open('file.txt').read().split('\n')
f = list(map(int, f))
ans = 0
k = 135
n = 1000
mx = 0
for i in range(len(f)):
    el = f[i]
    mx = max(mx, f[i - 135])
    ans = max(ans, el + mx)

print(ans)

for i in range(len(f)):
    for j in range(i+135, len(f)):
        a, b = f[i], f[j]
        ans = max(a+b, ans)
print(ans)


'''Менеджер по работе с персоналом присваивает рейтинговый балл каждому из N кандидатов, резюме которых он изучает. Он хочет
нанять двух специалистов с суммарным рейтингом не менее К баллов.

Требуется по имеющимся данным о баллах N кандидатов определить, сколько различных пар кандидатов можно выбрать так,
чтобы их суммарный рейтинговый балл составлял не менее К. Две пары кандидатов считаются различными,
если хотя бы один из членов пары не присутствует в другой паре. Запишите в ответе найденное количество пар.

Входные данные

Даны два входных файла (файл А и файл В), каждый из которых в первой строке содержит натуральное число К — ограничение
на суммарный рейтинг двух кандидатов в баллах, а во второй — количество кандидатов N (1 < К < 10 000 000, 1 < N < 10 000 000).
В каждой из следующих N строк находится одно число: рейтинговый балл соответствующего кандидата.
Данные кандидатов отсортированы в порядке неубывания. /(возрастания)
В ответе укажите два числа: сначала значение искомой величины для фаила A, затем — для фаила В.
Типовой пример организации данных во входном файле
100
5
20
50
50
100
200
При таких исходных данных искомая величина равна 8. Первый кандидат может составлять пары с двумя последними;
второй кандидат с рейтингом 50 может быть в паре с третьим, четвёртым или пятым; третий имеет такой же рейтинг, как второй,
и может составлять пару с четвёртым или пятым кандидатом, которые, в свою очередь, образуют допустимую пару друг с другом.
Типовой пример имеет иллюстративный характер. Для выполнения задания используйте данные из прилагаемых файлов.
Предупреждение: для обработки файла В не следует использовать переборный алгоритм, вычисляющий искомую величину
для всех возможных вариантов, поскольку написанная по такому алгоритму программа будет выполняться слишком долго.'''
f = open('file.txt').read().split('\n')
f = list(map(int, f))
ans = 0
k = 11023
n = 900
mx = 0
m = [0] * (k)
for i in range(len(f)):
    el = f[i]
    if el < k:
        for l in range(k-el, len(m)):
            ans += m[l]
        m[el] += 1

print(ans)


for i in range(len(f)):
    for j in range(i+1, len(f)):
        a, b = f[i], f[j]
        if (a + b) >= 11023:
            ans += 1
print(ans)

f = open('file.txt').read().split('\n')
# f = list(map(int, f))
# # mx = 0
# # c = 0
# # ans = 0
# # for i in range(len(f)):
# #     el = f[i]
# #     mx = max(mx, f[i-3])
# #     if (mx+el) % 2 == 0:
# #         ans = max(ans, (mx+el))
# # print(ans)
# # ans = 0
# # for i in range(len(f)):
# #     for j in range(i+3, len(f)):
# #         a, b = f[i], f[j]
# #         if (a + b) % 2 == 0:
# #             ans = max(a+b, ans)
# # print(ans)
#
# # ans = 0
# # mx = 0
# # c = 0
# #
# # for i in range(len(f)):
# #     el = f[i]
# #     mx = max(mx, f[i-3])
# #     if (mx + el) % 42 == 0:
# #         print(mx, el)
# #         ans = max(ans, mx+el)
# #
# # print(ans)
# #
# # for i in range(0, len(f)):
# #     for j in range(i+3, len(f)):
# #         a, b = f[i], f[i+1]
# #         if (a + b) % 42 == 0:
# #             ans = max(ans, a+b)
# #             print(a, b)
# # print(ans)


'''
В городе M расположена кольцевая автодорога длиной в N километров с движением в обе стороны.
На каждом километре автодороги расположены пункты приема мусора определенной вместимости.
В пределах кольцевой дороги в одном из пунктов сборки мусора собираются поставить мусороперерабатывающий завод таким образом, чтобы стоимость доставки мусора была минимальной.
Стоимость доставки мусора вычисляется, как вместимость пункта сбора умноженная на расстояние от пункта сбора мусора до мусороперерабатывающего завода.
Если мусороперерабатывающий завод находится рядом с пунктом сбора расстояние считается нулевым. Контейнеры нумеруются с 1 до N.
Рядом с каким пунктом сбора мусора нужно поставить мусороперерабатывающий завод?
Описание входных данных:
Первое число N — количество контейнеров для мусора. Последующие N чисел — количество килограмм мусора, которое производится на точке.
Описание выходных данных:
Одно число — номер контейнер для мусора рядом с которым стоит расположить перерабатывающий завод.
Пример организации входных данных:
6
8
20
5
13
7
19
Для данного примера ответ — 6 (7⸱1 + 13⸱2 + 5⸱3 + 20⸱2 + 8⸱1 + 19⸱0).
'''

f = list(map(int, open('file.txt').read().split('\n')))
costs = [0] * len(f)

for i in range(len(f)):
    sm = 0
    for j in range(len(f)):
        r = abs(j-i)
        sm = f[i] * min(r, len(f) - r)
    costs[i] = sm

m = min(costs)
print(costs.index(m))

'''
У медицинской компании есть N пунктов приёма биоматериалов на анализ. Все пункты расположены вдоль автомагистрали и имеют номера, соответствующие расстоянию от нулевой отметки до конкретного пункта.
Известно количество пробирок, которое ежедневно принимают в каждом из пунктов. Пробирки перевозят в специальных транспортировочных контейнерах вместимостью не более 36 штук.
Каждый транспортировочный контейнер упаковывается в пункте приёма и вскрывается только в лаборатории. Компания планирует открыть лабораторию в одном из пунктов.
Стоимость перевозки биоматериалов равна произведению расстояния от пункта до лаборатории на количество контейнеров с пробирками.
Общая стоимость перевозки за день равна сумме стоимостей перевозок из каждого пункта в лабораторию.
Лабораторию расположили в одном из пунктов приёма биоматериалов таким образом, что общая стоимость доставки биоматериалов из всех пунктов минимальна.
Определите минимальную общую стоимость доставки биоматериалов из всех пунктов приёма в лабораторию.
Входные данные
Дано два входных файла (файл A и файл B), каждый из которых в первой строке содержит число N (1 ≤ N ≤ 10 000 000) – количество пунктов приёма биоматериалов.
В каждой из следующих N строк находится два числа: номер пункта и количество пробирок в этом пункте (все числа натуральные, количество пробирок в каждом пункте не превышает 1000).
Пункты перечислены в порядке их расположения вдоль дороги, начиная от нулевой отметки.
В ответе укажите два числа: сначала значение искомой величины для файла А, затем – для файла B.
Типовой пример организации данных во входном файле
6
1 100
2 200
5 4
7 3
8 2
10 190
При таких исходных данных и вместимости транспортировочного контейнера, составляющей 96 пробирок, компании выгодно открыть лабораторию в пункте 2.
В этом случае сумма транспортных затрат составит: 1 · 2 + 3 · 1 + 5 · 1 + 6 · 1 + 8 · 2.
'''
f = open('file.txt').read().split('\n')
for i in range(len(f)):
    f[i] = list(map(int, f[i].split()))
costs = [0] * len(f)
for i in range(len(f)):
    sm = 0
    for j in range(len(f)):
        r = abs(f[i][0] - f[j][0])
        if f[i][1] % 36 != 0:
            k = f[i][1] // 36 + 1
        else:
            k = f[i][1] // 36
        sm = k * r
    costs[i] = sm


print(costs)


P = [x for x in range(5, 30+1)]
Q = [x for x in range(14, 23+1)]
A = [x for x in range(5, 31)]

for x in range(5, 31):
    f = ((x in A) <= (x in P)) or (x in Q)
    if f == False:
        A.remove(x)

# print(A)

'''
У медицинской компании есть N пунктов приёма биоматериалов на анализ. Все пункты расположены вдоль автомагистрали и имеют номера, соответствующие расстоянию от нулевой отметки до конкретного пункта.
Известно количество пробирок, которое ежедневно принимают в каждом из пунктов. Пробирки перевозят в специальных транспортировочных контейнерах вместимостью не более 36 штук.
Каждый транспортировочный контейнер упаковывается в пункте приёма и вскрывается только в лаборатории. Компания планирует открыть лабораторию в одном из пунктов.
Стоимость перевозки биоматериалов равна произведению расстояния от пункта до лаборатории на количество контейнеров с пробирками.
Общая стоимость перевозки за день равна сумме стоимостей перевозок из каждого пункта в лабораторию.
Лабораторию расположили в одном из пунктов приёма биоматериалов таким образом, что общая стоимость доставки биоматериалов из всех пунктов минимальна.
Определите минимальную общую стоимость доставки биоматериалов из всех пунктов приёма в лабораторию.
Входные данные
Дано два входных файла (файл A и файл B), каждый из которых в первой строке содержит число N (1 ≤ N ≤ 10 000 000) – количество пунктов приёма биоматериалов.
В каждой из следующих N строк находится два числа: номер пункта и количество пробирок в этом пункте (все числа натуральные, количество пробирок в каждом пункте не превышает 1000).
Пункты перечислены в порядке их расположения вдоль дороги, начиная от нулевой отметки.
В ответе укажите два числа: сначала значение искомой величины для файла А, затем – для файла B.
Типовой пример организации данных во входном файле
6
1 100
2 200
5 4
7 3
8 2
10 190
При таких исходных данных и вместимости транспортировочного контейнера, составляющей 96 пробирок, компании выгодно открыть лабораторию в пункте 2 или в пункте 5.
В этом случае сумма транспортных затрат составит: 1 · 2 + 3 · 1 + 5 · 1 + 6 · 1 + 8 · 2.
3 * 3 + 4 * 2 + 2 * 1 + 3 * 1 +5 * 2 = 10 + 3 +2 +8 +9 = 32
'''
f = open('file.txt').read().split('\n')
for i in range(len(f)):
    f[i] = list(map(int, f[i].split()))

costs = [0] * (f[-1][0])
for i in range(len(f)):
    sm = 0
    for j in range(len(f)):
        r = abs(f[i][0] - f[j][0])
        if f[i][1] % 96 != 0:
            k = f[j][1] // 96 + 1
        else:
            k = f[j][1] // 96
        sm += k * r
    costs[f[i][0] - 1] = sm

m = 10000000000000
for el in costs:
    if el < m and el != 0:
        m = el
print(m) # 26119
'''
# В городе M расположена кольцевая автодорога длиной в N километров с движением в обе стороны.
# На каждом километре автодороги расположены пункты приема мусора определенной вместимости.
# В пределах кольцевой дороги в одном из пунктов сборки мусора собираются поставить мусороперерабатывающий завод таким образом, чтобы стоимость доставки мусора была минимальной.
# Стоимость доставки мусора вычисляется, как вместимость пункта сбора умноженная на расстояние от пункта сбора мусора до мусороперерабатывающего завода.
# Если мусороперерабатывающий завод находится рядом с пунктом сбора расстояние считается нулевым. Контейнеры нумеруются с 1 до N.
# Рядом с каким пунктом сбора мусора нужно поставить мусороперерабатывающий завод?
# Описание входных данных:
# Первое число N — количество контейнеров для мусора. Последующие N чисел — количество килограмм мусора, которое производится на точке.
# Описание выходных данных:
# Одно число — номер контейнер для мусора рядом с которым стоит расположить перерабатывающий завод.
# Пример организации входных данных:
# 6
# 8
# 20
# 5
# 13
# 7
# 19
# Для данного примера ответ — 6 (7⸱1 + 13⸱2 + 5⸱3 + 20⸱2 + 8⸱1 + 19⸱0).
# '''
#
# f = open('file.txt').read().split('\n')
# for i in range(len(f)):
#     f[i] = list(map(int, f[i].split()))
#
# costs = [0] * (f[-1][0])
#
# for i in range(len(f)):
#     sm =