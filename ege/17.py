# Определите и запишите в ответе сначала количество пар элементов последовательности,
# у которых
# сумма элементов кратна 80
# и ровно один элемент из пары делится на 50,
# затем максимальную из сумм элементов таких пар.


f = open('text.txt').read().split('\n')
k = 0
sm = 0

for i in range(1, len(f)):
    a = int(f[i-1])
    b = int(f[i])
    if (a + b) % 80 == 0:    # 1
        if ((a % 50 == 0) and (b % 50 != 0)) or ((b % 50 == 0) and (a % 50 != 0)):      # 2
            k += 1
    if (a+b) > sm :
        sm = a+b

print(k)
print(sm)



# в которых хотя бы одно число кратно минимальному числу в последовательности, кратному 17.
# В ответе запишите количество найденных пар, затем максимальную из сумм элементов таких пар.
# В данной задаче под парой подразумевается два идущих подряд элемента последовательности.


f = open('text.txt').read().split('\n')
minimum = 34
c = 0
sm = 0
# for i in f:
#     el = int(i)
#     if el%17==0:
#         print(el)
minimum = 34
for i in range(1, len(f)):
    a = int(f[i])
    b = int(f[i-1])
    if ((a%minimum == 0) and (b%minimum != 0)) or ((b%minimum == 0) and (a%minimum != 0)):
        c += 1
        if (a+b) > sm:
            sm = a+b
print(c)
print(sm)








# хотя бы одно число кратно максимальному числу в последовательности, кратному 13.
# В ответе запишите количество найденных пар, затем минимальную из сумм элементов таких пар..
m = 17
f = open('text.txt').read().split('\n')
sm = 10**5
c = 0
print(f.count('9997'))
for i in range(1, len(f)):
    a = int(f[i])
    b = int(f[i-1])
    if (a % 9997 == 0) or (b % 9997 == 0):
        c += 1
        if (a+b) < sm:
            sm = a+b

print(c)
print(sm)



# в которых остаток от деления ровно одного из элементов на 117 равен минимальному элементу последовательности.
# В ответе запишите количество найденных пар, затем максимальную из сумм элементов таких пар.
m = 17
f = open('text.txt').read().split('\n')
sm = 1
c = 0
f = list(map(int, f))
a = min(f)
for i in range(1, len(f)):
    a = int(f[i])
    b = int(f[i-1])

    if (a % 117 == 10) and (b % 117 != 10) or (b % 117 == 10) and (a % 117 != 10):
        c += 1
        if (a+b) > sm:
            sm = a+b

print(c)
print(sm)



# сумма элементов меньше минимального положительного элемента последовательности, кратного 19.
# Гарантируется. что такой элемент в последовательности есть.
# В ответе запишите количество найденных пар, затем абсолютное значение максимальной из сумм элементов таких пар

f = open('text.txt').read().split('\n')
sm = 1
c = 0
f = list(map(int, f))
m = 10**4
for el in f:
    if el > 0 and el % 19 == 0:
        if m > el:
            m = el
print(m) #19

for i in range(1, len(f)):
    a = f[i]
    b = f[i-1]
    if a+b < m:
        c += 1
        if (a+b) > sm:
            sm = a+b

print(c)
print(sm)






# количество троек последовательности, в которых только одно из чисел является четырёхзначным
# а сумма элементов тройки не меньше максимального элемента последовательности, оканчивающегося на 15.
# В ответе запишите количество найденных троек, затем максимальную из сумм элементов таких троек. 3034 205773

f = open('text.txt').read().split('\n')
sm = 1
k = 0
m = 0

f = list(map(int, f))
for el in f:
    if el%100 == 15:
        if el > m:
            m = el

for i in range(2, len(f)):
    a = f[i]
    b = f[i-1]
    c = f[i-2]

    znak = 0
    for l in [a,b,c]:
        if len(str(l)) == 4:
            znak += 1

    if (a+b+c) >= m and znak == 1:
        k += 1
        if (a+b+c) > sm:
            sm = a+b+c

print(k)
print(sm)



# не более двух из трёх элементов являются четырёхзначными числами,
# а сумма элементов тройки не больше максимального элемента последовательности, оканчивающегося на 25.
# В ответе запишите количество найденных троек чисел, затем максимальную из сумм элементов таких троек.

f = open('text.txt').read().split('\n')
sm = 1
k = 0
m = 0

f = list(map(int, f))
for el in f:
    if el%100 == 25:
        if el > m:
            m = el

for i in range(2, len(f)):
    a = f[i]
    b = f[i-1]
    c = f[i-2]

    znak = 0
    for l in [a,b,c]:
        if len(str(l)) == 4:
            znak += 1

    if (a+b+c) <= m and znak <= 2:
        k += 1
        if (a+b+c) > sm:
            sm = a+b+c

print(k)
print(sm)



# в которых только один из элементов является четырёхзначным числом,
# а квадрат суммы элементов пары не больше квадрата максимального элемента последовательности,
# являющегося четырёхзначным числом и оканчивающегося на 39.
# В ответе запишите количество найденных пар чисел, затем максимальную из сумм элементов таких пар.

f = open('text.txt').read().split('\n')
sm = 1
k = 0
m = 0

f = list(map(int, f))
for el in f:
    if el%100 == 39 and len(str(abs(el))) == 4:
        if el > m:
            m = el
print(m) #9839
for i in range(1, len(f)):
    a = f[i]
    b = f[i-1]
    znak = 0
    for l in [a,b]:
        if len(str(l)) == 4:
            znak += 1

    if (a+b)**2 <= m**2 and znak == 1:
        k += 1
        if (a+b) > sm:
            sm = a+b

print(k)
print(sm)



# Дана последовательность N (1 ≤ N ≤ 20  ) целых неотрицательных чисел.
# Необходимо определить количество пар положительных элементов этой последовательности,
# сумма которых нечетна, при этом между элементами пары есть хотя бы один ноль.
# удалить 1 строку

f = open('text.txt').read().split('\n')
sm = 10**5
k = 0
mi = 10**5
lst = []
f = list(map(int, f))
for i in range(0, len(f)):
    if f[i] == 0:
        lst.append(i)

for i in range(0, len(f)):
    for j in range(i+1, len(f)):
        a = f[i]
        b = f[j]
        if (a+b) % 2 == 1 and (a != 0) and (b != 0):
            for ind in lst:
                if ind > i and ind < j:
                    k += 1
                if k > 0:
                    break


print(k)
#print(sm)


# в которых только одно число оканчивается на 3  ,
# а сумма квадратов элементов пары не меньше квадрата максимального элемента последовательности,
# оканчивающегося на 3  .
# В ответе запишите два числа: сначала количество найденных пар,
# затем максимальную из сумм квадратов элементов таких пар.
f = open('text.txt').read().split('\n')
n = 20
sm = 0
k = 0
lst = []
ma = 0
print(abs(-2734)%10)
f = list(map(int, f))
for i in range(0, len(f)):
    if f[i] > ma and f[i]%10 == 3:
        ma = f[i]
#9973
print(ma)
for i in range(0, len(f)):
    for j in range(i+1, len(f)):
        a = f[i]
        b = f[j]
        if ((abs(a%10) == 3 and abs(b%10) != 3) or (abs(b%10) == 3 and abs(a%10) != 3)) and (a**2 + b**2) >= ma**2:
            k += 1
            if (a**2+b**2) > sm :
                sm = a**2 + b**2


print(k)
print(sm)