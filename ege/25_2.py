'''
Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:

— символ «?» означает ровно одну произвольную цифру;

— символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.

Например, маске 123  *4?5   соответствуют числа 123405   и 12300405  .

Среди натуральных чисел, не превышающих 10**9  , найдите все числа, соответствующие маске 12345?7?8  , делящиеся на число 21   без остатка.

В ответе запишите все найденные числа в порядке возрастанияи и соответствующее им частное от деления на 21  .
'''

for x in range(0, 10):
    for y in range(0, 10):
        l = int('12345{}7{}8'.format(str(x),str(y)))
        if l % 21 == 0:
            print(l, l//21)
#123450768 5878608
# 123453708 5878748
# 123454758 5878798
# 123458748 5878988
# 123459798 5879038



'''
(ЕГЭ-2023) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
— символ «?» означает ровно одну произвольную цифру;
— символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425.
Найдите все числа, меньшие 10**8, соответствующие маске '12*34?5' и делящиеся без остатка на 2025.
 В качестве ответа приведите все найденные числа в порядке возрастания, справа от каждого числа выведите результат его деления на 2025.
'''

# * = 0 , 1 , 2 count
lst =[]
for x in range(0, 100):
    for y in range(0, 10):
        l = int('12{}34{}5'.format(str(x), str(y)))
        if l % 2025 == 0 :
            lst.append(l)

for y in range(0, 10):
    a = int('120034{}5'.format(str(y)))
    if a % 2025 == 0 :
        lst.append(a)

for y in range(0, 10):
    a = int('1234{}5'.format(str(y)))
    if a % 2025 == 0 :
        lst.append(a)
d = sorted(lst)
for el in d:
    print(el, el//2025)
# + * == 00 or * == None
#
# 1253475 619
# 12103425 5977
# 12593475 6219
# 12913425 6377


'''
(ЕГЭ-2022) Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
— символ «?» означает ровно одну произвольную цифру;
— символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.
Среди натуральных чисел, не превышающих 10**8, найдите все числа, соответствующие маске 12*4?65, делящиеся на 161 без остатка.
В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания, а во втором столбце – соответствующие им результаты деления этих чисел на 161.
'''

lst =[]
for x in range(0, 100):
    for y in range(0, 10):
        l = int('12{}4{}65'.format(str(x), str(y)))
        if l % 161 == 0 :
            lst.append(l)

for y in range(0, 10):
    a = int('12004{}65'.format(str(y)))
    if a % 161 == 0 :
        lst.append(a)

for y in range(0, 10):
    a = int('124{}65'.format(str(y)))
    if a % 161 == 0 :
        lst.append(a)
d = sorted(lst)
for el in d:
    print(el, el//161)
# 1234065 7665
# 12004965 74565
# 12214265 75865
# 12294765 76365
# 12504065 77665
# 12584565 78165
# 12874365 79965
# 12954865 80465

"""
Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
— символ «?» означает ровно одну произвольную цифру;
— символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.
Среди натуральных чисел, не превышающих 106  , найдите все числа, соответствующие маске 2738  * и делящиеся на        7   без остатка. В ответе запишите количество найденных чисел.
"""
c = 0
for x in range(1, 1000):
    num = int('2738' + str(x))
    if num % 7 == 0 :
        c += 1
print(c)
# 142

"""
Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
— символ «?» означает ровно одну произвольную цифру;
— символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.
Сколько существует натуральных чисел, соответствующих маске 123?654?  , у которых сумма нетривиальных делителей больше самого числа? В ответ запишите количество чисел.
"""


def divisions(x):
    lst = []
    x = int(x)
    for d in range(2, round(x**0.5) + 1):
        if x % d == 0:
            lst.append(d)
        if x // d != d and x % (x // d) == 0:
            lst.append(x//d)
    return list(set(lst))


c = 0
for x in range(0, 10):
    for y in range(0, 10):
        num = '123{}654{}'.format(str(x), str(y))
        num = int(num)
        if sum(divisions(num)) > int(num):
            c += 1

print(c)
# 27


"""
 Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
— символ «?» означает ровно одну произвольную цифру;
— символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425.
Среди натуральных чисел, меньших 109, найдите числа, удовлетворяющих маске 7*15?3*7 и делящиеся на 2267, у которых сумма цифр – простое число.
Запишите в ответе найденные числа в порядке возрастания, справа от каждого числа запишите частное от его деления на 2267.
"""


def summa(x):
    s = 0
    for i in str(x):
        s += int(i)
    return int(s)


def is_prime(x):
    for i in range(2, round(x**0.5) + 1):
        if x % i == 0:
            return False
    return True


for x in range(0, 10):
    for y in range(0, 100):
        for z in range(0, 100):
            n = '7{}15{}3{}7'. format(str(y), str(x), str(z))
            n = int(n)
            if (is_prime(summa(n)) == True) and (n % 2267 == 0):
                print(n, n//2267)

# 7161523277 3159031
# 7121533397 3141391
# 7441543117 3282551
# 7401553237 3264911
# 7271563457 3207571
# 781573187 344761
# 7231573577 3189931
# 7461583397 3291391
# 7151593817 3154651
# 7511593417 3313451


"""
Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:
— символ «?» означает ровно одну произвольную цифру;
— символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.
Например, маске 123*4?5 соответствуют числа 123405 и 12300425.
Среди десятиразрядных чисел, кратных 2023 и соответствующих маске «1*1», найдите числа с максимальной суммой цифр.
В ответ запишите найденные числа в порядке убывания, справа от каждого числа запишите частное от деления на 2023.
"""
from functools import lru_cache

lst = []

# @lru_cache
# def summa(x):
#     s = 0
#     for i in str(x):
#         s += int(i)
#     return int(s)
#
# ma_s = 0
# for x in range(10000000, 100000000):
#     n = int('1{}1'.format(str(x)))
#     if n % 2023 == 0:
#         lst.append(n)
#         ma_s = max(ma_s, summa(n))
#
# for el in lst:
#     if summa(el) == ma_s:
#         print(el, el/2023)
#
#1***1
for x in range(1, 100000000):
    x = str(x)
    while len(str(x)) != 10:
        x = '0' + x
    print(x)

    for x in range(0, 10 ** 10, 2024):
        if fnmatch(str(x), '1*2322?2'):
            print(x, x // 2024)


